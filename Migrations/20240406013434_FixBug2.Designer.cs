// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using appmvclibrary.Models;

#nullable disable

namespace appmvclibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240406013434_FixBug2")]
    partial class FixBug2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("appmvclibrary.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("appmvclibrary.Models.Contact", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("appmvclibrary.Models.Sach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("MoTaNgan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sachs");
                });

            modelBuilder.Entity("appmvclibrary.Models.SachCategory", b =>
                {
                    b.Property<int>("SachId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("SachId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SachCategories");
                });

            modelBuilder.Entity("appmvclibrary.Models.TacGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuSu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TacGias");
                });

            modelBuilder.Entity("appmvclibrary.Models.TacGiaSach", b =>
                {
                    b.Property<int>("SachId")
                        .HasColumnType("int");

                    b.Property<int>("TacGiaId")
                        .HasColumnType("int");

                    b.HasKey("SachId", "TacGiaId");

                    b.HasIndex("TacGiaId");

                    b.ToTable("TacGiaSachs");
                });

            modelBuilder.Entity("appmvclibrary.Models.Category", b =>
                {
                    b.HasOne("appmvclibrary.Models.Category", "ParentCategory")
                        .WithMany("CategoryChildren")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("appmvclibrary.Models.SachCategory", b =>
                {
                    b.HasOne("appmvclibrary.Models.Category", "Category")
                        .WithMany("SachCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appmvclibrary.Models.Sach", "Sach")
                        .WithMany("SachCategories")
                        .HasForeignKey("SachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("appmvclibrary.Models.TacGiaSach", b =>
                {
                    b.HasOne("appmvclibrary.Models.Sach", "Sach")
                        .WithMany("TacGiaSach")
                        .HasForeignKey("SachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appmvclibrary.Models.TacGia", "TacGia")
                        .WithMany("TacGiaSach")
                        .HasForeignKey("TacGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");

                    b.Navigation("TacGia");
                });

            modelBuilder.Entity("appmvclibrary.Models.Category", b =>
                {
                    b.Navigation("CategoryChildren");

                    b.Navigation("SachCategories");
                });

            modelBuilder.Entity("appmvclibrary.Models.Sach", b =>
                {
                    b.Navigation("SachCategories");

                    b.Navigation("TacGiaSach");
                });

            modelBuilder.Entity("appmvclibrary.Models.TacGia", b =>
                {
                    b.Navigation("TacGiaSach");
                });
#pragma warning restore 612, 618
        }
    }
}
